---
import { getCollection } from "astro:content";
import { Picture } from "@astrojs/image/components";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import PageIndicator from "@components/pageIndicator.astro";

// Generate a new path for every collection entry
export async function getStaticPaths({ paginate }) {
  const publishedBlogEntries = await getCollection("blog", ({ data }) => {
    return !data.draft && data.publishDate < new Date();
  });

  // Sort content entries by publication date
  publishedBlogEntries.sort(function (a, b) {
    return b.data.publishDate.valueOf() - a.data.publishDate.valueOf();
  });
  // Genera páginas para nuestro array de astronautas, con 10 elementos por página
  return paginate(publishedBlogEntries, { pageSize: 6 });
}

// Todos los datos paginados se pasan en la prop "page"
const { page } = Astro.props;
---

<Layout title="Artículos del Blog">
  <Container>
    <Sectionhead>
      <Fragment slot="title">Artículos del Blog</Fragment>
      <Fragment slot="desc">
        <h2 class="px-8" >
          Página {page.currentPage} de todos los artículos
        </h2>
      </Fragment>
    </Sectionhead>

    <main class="mt-16 px-8">
      <ul class="grid gap-8 mx-4 md:mx-auto mt-8 m-auto max-w-6xl grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
        {
          page.data.map((blogPostEntry, index) => (
            <li class="bg-slate-100 rounded-md p">
              <a href={`/blog/${blogPostEntry.slug}`}>
                <div class="grid gap-2 md:gap-4 items-center">
                  <Picture
                    src={blogPostEntry.data.image.src}
                    alt={blogPostEntry.data.image.alt}
                    sizes="(max-width: 800px) 100vw, 800px"
                    widths={[200, 400, 800]}
                    aspectRatio="16:9"
                    background="#ffffff"
                    fit="cover"
                    position="center"
                    loading={index <= 2 ? "eager" : "lazy"}
                    decoding={index <= 2 ? "sync" : "async"}
                    class="w-full rounded-t-md"
                  />
                  <div class="px-4 pb-4">
                    <span class="text-blue-400 uppercase tracking-wider text-sm font-medium">
                      {blogPostEntry.data.category}
                    </span>

                    <h2 class="text-3xl font-semibold leading-snug tracking-tight mt-1 ">
                      {blogPostEntry.data.title}
                    </h2>


                  </div>
                </div>
              </a>
            </li>
          ))
        }
      </ul>

      <PageIndicator 
        currentPage={page.currentPage} 
        sizeNumber={page.lastPage}
        prev = {page.url.prev ? page.url.prev: null}
        next = {page.url.next ? page.url.next: null}

      />

    </main>
  </Container>
</Layout>
